#!/usr/bin/bash

#doc: verify tombstones in root node hide keys in level 1 (see SBUSWNF-1265/PR-672)
keys=10

kvs=$(new_kvs $mp) || err

sp='[[:space:]]'

rparams='kvdb.csched_debug_mask=0xffffffff'

# Generate 8 kvsets in root node w/ duplicate data.
for ((i = 0; i < 8; i++)); do
    cmd $HSE_TOOLS_DIR/putbin -c$keys $mp $kvs $rparams kvs.cn_maint_disable=1
done

# Let compaction run, which should spill all keys into level 1, then verify
# no kvsets in level 0
cmd $HSE_TOOLS_DIR/putbin -n 1000 $mp $kvs kvs.cn_close_wait=1 $rparams
cmd $HSE_TOOLS_DIR/cn_metrics $mp $kvs
check=$LOG
cmd --exp-err-status grep -P "^k${sp}+0,0,0${sp}" "$check"

# Validate keys found in level 1, w/ maint disabled.
cmd $HSE_TOOLS_DIR/putbin -V -c$keys $mp $kvs $rparams kvs.cn_maint_disable=1

# Add tombstones, with maint disabled.  Verify that one kvset is in root node.
cmd $HSE_TOOLS_DIR/putbin -D -c$keys $mp $kvs $rparams kvs.cn_maint_disable=1
cmd $HSE_TOOLS_DIR/cn_metrics $mp $kvs
check=$LOG
cmd grep -P "^n${sp}+0,0,1${sp}" "$check"

# Validate keys, w/ maint disabled. Expect error since tombstones block.
cmd --exp-err-status $HSE_TOOLS_DIR/putbin -V -c1 $mp $kvs $rparams kvs.cn_maint_disable=1


